name: 'Dockerize'
description: 'This GitHub Action automates the process of building, pushing, and signing Docker images. It is designed to work with GitHub Container Registry and supports multi-platform builds.'
inputs:
  
  registry:
    description: 'The registry to push the Docker image to'
    required: true
    default: 'ghcr.io'

  docker-directory:
    description: 'The directory containing the Dockerfile'
    required: true
    default: '.'

  image-name:
    description: 'The name of the Docker image'
    required: true
    default: null

  platform:
    description: 'The platform to build the Docker image for'
    required: true
    # linux/amd64,linux/arm64
    default: 'linux/amd64'

  tags:
    description: 'The tags to apply to the Docker image'
    required: false
    default: null

  github-token:
    description: 'The GitHub Token for pushing and signing the Docker image'
    required: true

runs:
  using: 'composite'
  steps:

    - name: Install Cosign
      uses: sigstore/cosign-installer@v3.7.0

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3.3.0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.8.0

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3.3.0
      with:
        registry: ${{ inputs.registry }}
        username: ${{ github.actor }}
        password: ${{ inputs.github-token }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5.6.1
      with:
        images: ${{ inputs.registry }}/${{ inputs.image-name }}

    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v6.13.0
      with:
        context: ${{ inputs.docker-directory }}
        push: ${{ github.event_name != 'pull_request' }}
        provenance: false
        platforms: ${{ inputs.platform }}
        tags: |
          ${{ steps.meta.outputs.tags }}
          ${{ inputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Sign the published Docker image
      if: ${{ github.event_name != 'pull_request' }}
      env:
        TAGS: |
          ${{ steps.meta.outputs.tags }}
          ${{ inputs.tags }}
        DIGEST: ${{ steps.build-and-push.outputs.digest }}
      shell: bash
      run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}